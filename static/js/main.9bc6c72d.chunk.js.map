{"version":3,"sources":["utilities/color.js","components/Quote.js","containers/Scores.js","components/Input/index.js","containers/WriteQuote.js","components/Timer/index.js","containers/Game.js","containers/Join.js","containers/Wordsmyth.js","App.js","serviceWorker.js","index.js"],"names":["getRGB","color","h","charAt","substring","parseInt","Quote","this","props","quote","beginning","end","votes","publicPlayer","bonus","status","player","phase","className","judge","title","name","onClick","sendRequest","disabled","style","map","id","Component","Scores","players","score","visibility","Input","state","_","uniqueId","helperText","onChange","bind","event","pattern","min","max","message","value","target","match","setState","label","rest","htmlFor","length","WriteQuote","setQuote","type","Timer","timer","console","log","width","time","total","Game","expectedRequest","request","playerName","gameId","sendObject","quotes","playerQuotes","origin","displayQuotes","getRound","action","height","Join","new","username","rounds","join","create","alert","key","setField","getInputs","Wordsmyth","connection","handleServerCommunication","leave","WebSocket","onopen","onerror","error","onmessage","e","comm","JSON","parse","data","onclose","checkCookie","document","documentElement","setProperty","includes","setUser","stringify","response","setCookie","obj","self","waitForSocketConnection","callback","setTimeout","readyState","send","exminutes","d","Date","setTime","getTime","expires","cookie","cname","ca","split","i","c","indexOf","getCookie","undefined","requestStatus","getElementById","App","window","location","protocol","replace","href","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9bc6c72d.chunk.js","sourcesContent":["let getRGB = function(color) {\r\n    if(!color) return {};\r\n    let h = (color.charAt(0)==\"#\") ? color.substring(1,7):color;\r\n\r\n    return {\r\n        [\"--red\"]: parseInt(h.substring(0,2),16), \r\n        [\"--green\"]: parseInt(h.substring(2,4),16),\r\n        [\"--blue\"]: parseInt(h.substring(4,6),16)\r\n    }\r\n}\r\n\r\nexport { getRGB };","import React, { Component } from 'react';\r\nimport \"../styles/Quote.scss\";\r\nimport { getRGB } from '../utilities/color'\r\n\r\nimport { FaThumbsUp as BonusPoint } from 'react-icons/fa'\r\n\r\nclass Quote extends Component {\r\n\r\n   \r\n\r\n    render() {\r\n        let {beginning, end, votes, publicPlayer, bonus} =  this.props.quote;\r\n        let {player, phase} = this.props.status;\r\n\r\n        let className = \"quoteBlock \" + (votes ? \"results\" : \"input\");\r\n        let quoteColor = publicPlayer ? getRGB(publicPlayer.color) : getRGB(\"#000000\");\r\n        return (\r\n            <div className={className} >\r\n                <div className={'bonus_quote'}>\r\n                    <div className={`bonus ${(player.judge || phase == 3) && bonus ? \"visible\" : \"hidden\" }`} title={publicPlayer && publicPlayer.name + \" got a bonus point for creativity!\"}><BonusPoint/></div>\r\n                    <button \r\n                        onClick={()=> phase === 3 || this.props.sendRequest(this.props.quote)}\r\n                        disabled={this.props.disabled || votes}\r\n                        className={`box ${publicPlayer && publicPlayer.judge ? \"correct\" : \"\"}`}  \r\n                        style={getRGB(publicPlayer?.color)}\r\n                    >\r\n                        <div className=\"quote\">\r\n                            {publicPlayer && <div className=\"player\">{publicPlayer.name}</div>}\r\n                            {beginning + \"... \" + end}\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                {votes && <div className=\"votes\">\r\n                    {votes.map(player => {\r\n                        return (\r\n                            <div\r\n                                title={publicPlayer.judge ? `${player.name} voted for the correct quote!`: `${player.name} voted for ${publicPlayer.name}'s quote!`}\r\n                                id={player.name + \"_vote\"} \r\n                                className=\"vote\" \r\n                                style={getRGB(player.color)}>\r\n                                    {player.name}\r\n                            </div>\r\n                        )\r\n                    }\r\n                    )}\r\n                </div>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n} export default Quote;","import React, { Component } from 'react';\r\nimport { getRGB } from '../utilities/color'\r\n\r\nimport { MdGavel as CurrentPlayer } from 'react-icons/md'\r\n\r\nimport \"../styles/Scores.scss\"\r\n\r\nclass Scores extends Component  {\r\n    render() {  \r\n        return (\r\n            <div className=\"scores\">\r\n                    {this.props.players.map(player => {\r\n                        return (\r\n                            <div \r\n                                title={player.judge ? player.name + \" is the judge!\" : player.name}\r\n                                className=\"score\"\r\n                                style={getRGB(player.color)}\r\n                            >\r\n                                {player.name}\r\n                                {this.props.phase>-1 && ` : ${player.score}`} \r\n                                {this.props.phase>-1 && <span className=\"judge\" style={{visibility: (player.judge ? \"visible\" : \"hidden\")}}>{<CurrentPlayer/>} </span>}\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </div>\r\n        )\r\n    }\r\n} export default Scores;","import React, { Component } from 'react';\r\n\r\nimport _ from 'lodash'\r\nimport './styles.scss'\r\n\r\n\r\nclass Input extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id : _.uniqueId('input_'),\r\n            helperText: \"\"\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    onChange(event) {\r\n        \r\n        const { pattern, min, max, message } = this.props;\r\n        const value = event.target.value;\r\n        \r\n        if(pattern && value && !value.match(pattern)) this.setState({helperText: message || \"Input is invalid.\"})\r\n        else if(min && value && parseInt(value) < min) this.setState({helperText:`Value must be greater than or equal to ${min}`})\r\n        else if(max && value && parseInt(value) > max) this.setState({helperText:`Value must be less than or equal to ${max}`})\r\n        else this.setState({helperText: \"\"})\r\n        \r\n        this.props.onChange(event);\r\n    }\r\n\r\n    render() {\r\n        const { label, id, onChange, ...rest } = this.props\r\n        return (\r\n            <div className=\"wordsmyth_input\" id={id} {...rest}>\r\n                {label && <label htmlFor={this.state.id}>{label}</label>}\r\n                <input\r\n                    id={this.state.id}\r\n                    onChange={this.onChange}\r\n                    {...rest}\r\n                />\r\n                {this.state.helperText.length > 0 && <span className=\"error\">{this.state.helperText}</span>}\r\n            </div>\r\n        )\r\n    }\r\n} export default Input;","import React, { Component } from 'react';\r\nimport Input from '../components/Input/index';\r\n\r\nimport \"../styles/WriteQuote.scss\"\r\n\r\nclass WriteQuote extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            quote: props.quote\r\n        }\r\n        this.setQuote = this.setQuote.bind(this);\r\n    }\r\n\r\n    setQuote(event) {\r\n        let { quote } = this.props\r\n        quote.end = event.target.value;\r\n        this.setState({quote})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"writing\">\r\n                <div id=\"beginning\">\r\n                    {this.props.quote.beginning + \"... \"}\r\n                </div>\r\n                <Input \r\n                    type=\"text\"\r\n                    id=\"quoteEnd\"\r\n                    disabled={this.props.disabled}\r\n                    onChange={this.setQuote}\r\n                />\r\n                <button disabled={this.props.disabled} onClick={()=>{this.props.sendRequest(this.state.quote);}}>Submit</button>\r\n            </div>\r\n        )\r\n    } \r\n} export default WriteQuote;\r\n","import React, { Component } from 'react';\r\n\r\nimport './styles.scss'\r\n\r\n\r\nclass Timer extends Component {\r\n    render() {\r\n        const { timer } = this.props\r\n        console.log(timer)\r\n        return (\r\n            <div className=\"wordsmyth_timer\">\r\n                <div className='timer' style={{width: `${parseInt(timer.time)/parseInt(timer.total)*100}%`}}></div>\r\n            </div>\r\n        )\r\n    }\r\n} export default Timer;","import React, { Component } from 'react';\r\n\r\nimport { MdGavel as CurrentPlayer } from 'react-icons/md'\r\n\r\nimport Quote from '../components/Quote';\r\nimport Scores from './Scores';\r\nimport WriteQuote from './WriteQuote';\r\n\r\nimport Timer from '../components/Timer/index'\r\n\r\nimport { getRGB } from '../utilities/color'\r\n\r\nimport \"../styles/Game.scss\"\r\n\r\nclass Game extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.sendRequest = this.sendRequest.bind(this);\r\n    }\r\n\r\n    // const phases = {\r\n    //     -1 : \"\"\r\n    // }\r\n\r\n    sendRequest(quote) {\r\n        if(quote.target) quote ={}\r\n        if(!this.props.status.expectedRequest) return;\r\n        let request = this.props.status.expectedRequest;\r\n        request.name = this.props.playerName;\r\n        request.gameId = this.props.gameId;\r\n        request.quote = quote;\r\n        this.props.sendObject(request);\r\n    }\r\n\r\n    getRound(status) {\r\n        let quotes = status.quotes || status.playerQuotes;\r\n        if(quotes) {\r\n            return (\r\n                <div>\r\n                    {quotes.length>0 \r\n                        ? <div id=\"quoteorigin\"> There's an old {quotes[0].origin} saying: </div> \r\n                        : <div id=\"emptyquotes\"> Looks like no one submitted this round.<br/> Is everyone okay? </div>}\r\n                    {this.displayQuotes(status)}\r\n                </div>\r\n            )\r\n        }\r\n        return false;\r\n    }\r\n\r\n    displayQuotes(status) {\r\n        if(status.quotes) {\r\n            if(status.quotes.length > 1) return status.quotes.map( quote => <Quote status={status} quote={quote} sendRequest={this.sendRequest}/>)\r\n            else return <WriteQuote quote={status.quotes[0]} disabled={!this.props.status.expectedRequest} sendRequest={this.sendRequest}/>\r\n        } else if(status.playerQuotes) {\r\n            return status.playerQuotes.map( quote => <Quote disabled={!this.props.status.expectedRequest} status={status} quote={quote} sendRequest={this.sendRequest}/>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { status , timer} = this.props;\r\n\r\n        return (\r\n            <div id=\"game\">\r\n                <div id=\"header\" style={getRGB(status.player.color)}>\r\n                    <div id=\"top\">\r\n                        <div id=\"title\">Wordsmyth</div>\r\n                        <div id=\"info\" >\r\n                            <div id=\"username\">\r\n                                {this.props.playerName}\r\n                                <span \r\n                                    className=\"judge\" \r\n                                    title=\"You're the judge this round!\"\r\n                                    style={{visibility: (status.player.judge ? \"visible\" : \"hidden\")}}\r\n                                >\r\n                                    <CurrentPlayer/>\r\n                                </span>    \r\n                            </div>\r\n                            <div id=\"gameid\">{status.gameId}</div>\r\n                        </div>\r\n                    </div>\r\n                    {timer && timer.time > 0 && <Timer timer={timer}/>}\r\n                </div>\r\n                \r\n                {this.getRound(status)}\r\n                {status.phase===4 && \r\n                    <div id=\"winner\">\r\n                        <div style={getRGB(status.players[0].color)} className=\"player\">\r\n                            {status.players[0].name}\r\n                        </div> \r\n                        won! Well done, everyone!\r\n                    </div>}\r\n                {!status.expectedRequest && <div id=\"waiting\">Waiting to move to the next round!</div>}\r\n                {status.expectedRequest && (status.phase === -1 || status.phase === 3) \r\n                    && <div id=\"waiting\">\r\n                            Let us know when you're ready to {status.expectedRequest.action}!\r\n                            <button onClick={this.sendRequest}>{status.expectedRequest.action}</button>\r\n                        </div>}\r\n\r\n                {\r\n                    this.props.status.players && <Scores phase={status.phase} players={this.props.status.players}/>\r\n                }\r\n                {status.phase===4 && <button onClick={this.sendRequest}>{status.expectedRequest.action}</button>}\r\n\r\n                {status.phase===4 && <div style={{height:'30%'}}/>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n} export default Game;","import React, { Component } from 'react';\r\n\r\nimport Input from '../components/Input/index';\r\n\r\nimport \"../styles/Join.scss\"\r\n\r\nclass Join extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            new: true,\r\n            username: \"\",\r\n            rounds: 3,\r\n            timer: 60,\r\n            gameId: \"\"\r\n        }\r\n\r\n        this.join = this.join.bind(this);\r\n        this.create = this.create.bind(this);\r\n    }\r\n\r\n    join(){\r\n        let request = {\r\n          'type': 'request',\r\n          'action': 'join',\r\n          'name': this.state.username,\r\n          'gameId': this.state.gameId\r\n        };\r\n        this.props.sendObject(request);\r\n    }\r\n\r\n    create(){\r\n        if(!this.state.username || this.state.username === \"\") alert(\"Please enter a username!\")\r\n        let request = {\r\n          'type': 'request',\r\n          'action': 'create',\r\n          'max_timer': this.state.timer,\r\n          'max_rounds': this.state.rounds,\r\n          'name': this.state.username\r\n        };\r\n        this.props.sendObject(request);\r\n    }\r\n\r\n    setField(key, value) {\r\n        this.setState({[key]: value})\r\n    }\r\n\r\n    getInputs() {\r\n        if(this.state.new) {\r\n            return (\r\n                <div id=\"form\">\r\n                    <Input\r\n                        onChange={(event)=>this.setField(\"username\", event.target.value)}\r\n                        value={this.state.username}\r\n                        type=\"text\"\r\n                        label=\"Player's name\"\r\n                    />\r\n                    <div id=\"params\">\r\n                        <Input\r\n                            onChange={(event)=>this.setField(\"rounds\", event.target.value)}\r\n                            value={this.state.rounds}\r\n                            type=\"number\"\r\n                            label=\"Number of rounds\"\r\n                            min={1}\r\n                            max={15}\r\n                        />\r\n                        <div className=\"spacer\"/>\r\n                        <Input\r\n                            onChange={(event)=>this.setField(\"timer\", event.target.value)}\r\n                            value={this.state.timer}\r\n                            type=\"number\"\r\n                            label=\"Timer (in seconds)\"\r\n                            min={30}\r\n                            max={360}\r\n                        />\r\n                    </div>\r\n                    <button onClick={this.create}>Create Game</button>\r\n                </div>\r\n            )\r\n        } else  {\r\n            return (\r\n                <div id=\"form\">\r\n                    <Input\r\n                        onChange={(event)=>this.setField(\"username\", event.target.value)}\r\n                        value={this.state.username}\r\n                        type=\"text\"\r\n                        label=\"Player's name\"\r\n                    />\r\n                    <Input\r\n                        onChange={(event)=>this.setField(\"gameId\", event.target.value)}\r\n                        value={this.state.gameId}\r\n                        type=\"text\"\r\n                        label=\"Room code\"\r\n                        pattern={/^[a-zA-Z0-9]{6}$/}\r\n                        message=\"Game code must be alphanumeric and 6 characters long.\"\r\n                    />\r\n                    <button onClick={this.join}>Join Game</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div id=\"join\">\r\n                <div className=\"nav\">\r\n                    <div className={`navitem ${this.state.new ? \"selected\" : \"\"}`} onClick={()=>this.setState({new: true})}>Start a new Game?</div>\r\n                    <div className={`navitem ${!this.state.new  ? \"selected\" : \"\"}`} onClick={()=>this.setState({new: false})}>Or join a friend's?</div>\r\n                </div>\r\n                {this.getInputs()}\r\n            </div>\r\n        )\r\n    }\r\n} export default Join;","import React, { Component } from 'react';\r\n\r\nimport Game  from './Game';\r\nimport Join from './Join';\r\n\r\nimport \"../styles/Wordsmyth.scss\"\r\n\r\nclass Wordsmyth extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            playerName: \"\",\r\n            gameId: \"\",\r\n            status: {}\r\n        }\r\n\r\n        this.connection = null;\r\n\r\n        this.handleServerCommunication = this.handleServerCommunication.bind(this);\r\n        this.sendObject = this.sendObject.bind(this);\r\n        this.create = this.create.bind(this);\r\n        this.join = this.join.bind(this);\r\n        this.leave = this.leave.bind(this);\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.connection = new WebSocket('ws://107.2.148.208:4444');\r\n        this.connection.onopen = function () {\r\n            console.log('Connected!');\r\n        };\r\n        // Log errors\r\n        this.connection.onerror = function (error) {\r\n            console.log('WebSocket Error ' + error);\r\n            alert(\"Cannot reach server!\")\r\n        };\r\n        // Log messages from the server\r\n        this.connection.onmessage = function (e) {\r\n          // console.log('Server: ' + e.data);\r\n            let comm = JSON.parse(e.data);\r\n            this.handleServerCommunication(comm);\r\n        }.bind(this);\r\n    \r\n        this.connection.onclose = function (e) {\r\n            console.log('Connection lost');\r\n            // this.setCookie(\"\", \"\")\r\n          //THIS FUNCTION IS CALLED ON REFRESH IN FIREFOX BUT NOT CHROME\r\n          // DELETING COOKIES BREAKS FUNCTIONALITY IN FIREFOX\r\n        }.bind(this);\r\n        this.checkCookie();\r\n    }\r\n\r\n    handleServerCommunication(comm) {\r\n        switch(comm.type) {\r\n            case'status': this.setState({status: comm},  document.documentElement.style.setProperty('--buttonColor', this.state.status.color)); break;\r\n            case'response': {\r\n                if(comm.message) {\r\n                    if(comm.message.includes(\"No game with code\") || comm.message.includes(\"Player does not exist\")) {\r\n                        this.setUser()\r\n                    }\r\n                    alert(comm.message);\r\n                }\r\n                else this.setUser(comm);\r\n            };  break;\r\n            case'time': {\r\n                this.setState({timer: { time: comm.time, total: comm.total}})\r\n                break;\r\n            }\r\n            case'quit': {\r\n                this.setUser()\r\n                break;\r\n            }\r\n            default: alert(JSON.stringify(comm))\r\n\r\n        }\r\n    }\r\n\r\n    setUser(response) {\r\n        let {playerName, gameId} = response ? response : {playerName : \"\", gameId: \"\"};\r\n \r\n        this.setCookie(playerName, gameId, 1)\r\n        this.setState({playerName: playerName, gameId: gameId})\r\n    }\r\n\r\n    sendObject(obj){\r\n        let self = this;\r\n        function waitForSocketConnection(callback){\r\n            setTimeout(\r\n                function () {\r\n                    if (self.connection.readyState === 1) {\r\n                        if (callback != null){\r\n                            console.log(obj)\r\n                            callback();\r\n                        }\r\n                    } else {\r\n                        waitForSocketConnection(callback);\r\n                    }\r\n\r\n                }, 5); // wait 5 milisecond for the connection...\r\n        }\r\n        waitForSocketConnection(() => self.connection.send(JSON.stringify(obj)));\r\n    }\r\n\r\n    setCookie(playerName, gameId, exminutes=0) {\r\n        console.log(playerName, gameId)\r\n        var d = new Date();\r\n        d.setTime(d.getTime() + (exminutes * 60 * 1000));\r\n        var expires = (exminutes===0) ? \"\" : \"max-age=\"+(exminutes * 60 * 1000) + \";path=/\";\r\n        document.cookie = \"playerName=\" + playerName + \";\" + expires;\r\n        document.cookie = \"gameId=\" + gameId + \";\" + expires;\r\n    }\r\n\r\n    getCookie(cname) {\r\n        let name = cname + \"=\";\r\n        let ca = document.cookie.split(';');\r\n        for(let i = 0; i < ca.length; i++) {\r\n            let c = ca[i];\r\n            while (c.charAt(0) === ' ') {\r\n                c = c.substring(1);\r\n            }\r\n            if (c.indexOf(name) === 0) {\r\n                return c.substring(name.length, c.length);\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    checkCookie() {\r\n        let playerName = this.getCookie(\"playerName\");\r\n        let gameId = this.getCookie(\"gameId\");\r\n        console.log(playerName, gameId)\r\n        if (playerName !== undefined) {\r\n            this.setState({playerName: playerName, gameId: gameId}, this.requestStatus);\r\n        }\r\n    }\r\n\r\n    requestStatus() {\r\n        if(this.state.playerName === \"undefined\" || this.state.gameId === \"undefined\") return\r\n        let request = {\r\n          'type': 'request',\r\n          'action': 'status',\r\n          'name': this.state.playerName,\r\n          'gameId': this.state.gameId\r\n        };\r\n        this.sendObject(request);\r\n    }\r\n\r\n    create(){\r\n        let username = document.getElementById(\"username\").value;\r\n        if(!username || username === \"\") alert(\"Please enter a username!\")\r\n        let request = {\r\n          'type': 'request',\r\n          'action': 'create',\r\n          'name': document.getElementById(\"username\").value\r\n        };\r\n        this.sendObject(request);\r\n    }\r\n\r\n    join(){\r\n        let request = {\r\n          'type': 'request',\r\n          'action': 'join',\r\n          'name': document.getElementById(\"username\").value,\r\n          'gameId': document.getElementById(\"gameid\").value\r\n        };\r\n        this.sendObject(request);\r\n    }\r\n    \r\n    leave(){\r\n        let request = {\r\n          'type': 'request',\r\n          'action': 'leave',\r\n          'name': this.state.playerName,\r\n          'gameId': this.state.gameId\r\n        };\r\n        this.sendObject(request);\r\n    }\r\n\r\n    render() {\r\n        if(this.state.status.player) return (\r\n            <Game status={this.state.status} timer={this.state.timer} sendObject={this.sendObject} playerName={this.state.playerName} gameId={this.state.gameId}/>        \r\n        );\r\n        else return (\r\n            <Join sendObject={this.sendObject}/>\r\n        );\r\n    }\r\n} export default Wordsmyth;","import React from 'react';\nimport './App.css';\nimport Wordsmyth from './containers/Wordsmyth';\n\nfunction App() {\n\n\n  if (window.location.protocol === 'https:') {\n    window.location.replace(`http:${window.location.href.substring(window.location.protocol.length)}`);\n  }\n  return (\n    <div className=\"App\">\n      <Wordsmyth/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}